===============================================================================
Module : rs_bank
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 57.93 --     --      57.93 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_bank.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                     
 57.93 --     --      57.93 --     --     superrs_tb.DUT.rs_bank_0 
 57.93 --     --      57.93 --     --     superrs_tb.DUT.rs_bank_1 



-------------------------------------------------------------------------------
Toggle Coverage for Module : rs_bank
                Total Covered Percent 
Totals          109   54      49.54   
Total Bits      1450  840     57.93   
Total Bits 0->1 725   420     57.93   
Total Bits 1->0 725   420     57.93   

                               
Ports          93   42  45.16  
Port Bits      1026 480 46.78  
Port Bits 0->1 513  240 46.78  
Port Bits 1->0 513  240 46.78  

                                
Signals          16  12  75.00  
Signal Bits      424 360 84.91  
Signal Bits 0->1 212 180 84.91  
Signal Bits 1->0 212 180 84.91  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
rsbank_enable          Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
rs_full                Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
entry_issue_idx[2:0]     Yes    Yes         Yes         
entry_en[7:0]            Yes    Yes         Yes         
entry_busy[7:0]          Yes    Yes         Yes         
entry_ALU_ready[7:0]     Yes    Yes         Yes         
entry_ALU_sel[7:0]       Yes    Yes         Yes         
entry_LSQ_ready[7:0]     No     No          No          
entry_LSQ_sel[7:0]       No     No          No          
entry_MULT_ready[7:0]    Yes    Yes         Yes         
entry_MULT_sel[7:0]      Yes    Yes         Yes         
entry_sel[7:0]           Yes    Yes         Yes         
rd_mem_file[7:0]         No     No          No          
wr_mem_file[7:0]         No     No          No          
prega_idx_file[7:0][4:0] Yes    Yes         Yes         
pregb_idx_file[7:0][4:0] Yes    Yes         Yes         
pdest_idx_file[7:0][4:0] Yes    Yes         Yes         
issue_flag               Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 57.93 --     --      57.93 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.36 100.00  80.39  49.04 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME    
 57.93 --     --      57.93 --     --     rs_bank 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
 89.80 --     --      89.80 --     --     DUT  


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                 
 95.95 --     --      95.95 --     --     alu_select           
100.00 --     --     100.00 --     --     dispatch_select      
 81.78 100.00  80.39  46.74 --     100.00 genblk1[0].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[1].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[2].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[3].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[4].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[5].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[6].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[7].rs_entry0 
100.00 --     --     100.00 --     --     issue_select         
  0.00 --     --       0.00 --     --     lsq_select           
 95.95 --     --      95.95 --     --     mult_select          



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0
                Total Covered Percent 
Totals          109   54      49.54   
Total Bits      1450  840     57.93   
Total Bits 0->1 725   420     57.93   
Total Bits 1->0 725   420     57.93   

                               
Ports          93   42  45.16  
Port Bits      1026 480 46.78  
Port Bits 0->1 513  240 46.78  
Port Bits 1->0 513  240 46.78  

                                
Signals          16  12  75.00  
Signal Bits      424 360 84.91  
Signal Bits 0->1 212 180 84.91  
Signal Bits 1->0 212 180 84.91  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
rsbank_enable          Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
rs_full                Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
entry_issue_idx[2:0]     Yes    Yes         Yes         
entry_en[7:0]            Yes    Yes         Yes         
entry_busy[7:0]          Yes    Yes         Yes         
entry_ALU_ready[7:0]     Yes    Yes         Yes         
entry_ALU_sel[7:0]       Yes    Yes         Yes         
entry_LSQ_ready[7:0]     No     No          No          
entry_LSQ_sel[7:0]       No     No          No          
entry_MULT_ready[7:0]    Yes    Yes         Yes         
entry_MULT_sel[7:0]      Yes    Yes         Yes         
entry_sel[7:0]           Yes    Yes         Yes         
rd_mem_file[7:0]         No     No          No          
wr_mem_file[7:0]         No     No          No          
prega_idx_file[7:0][4:0] Yes    Yes         Yes         
pregb_idx_file[7:0][4:0] Yes    Yes         Yes         
pdest_idx_file[7:0][4:0] Yes    Yes         Yes         
issue_flag               Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 57.93 --     --      57.93 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.36 100.00  80.39  49.04 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME    
 57.93 --     --      57.93 --     --     rs_bank 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
 89.80 --     --      89.80 --     --     DUT  


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                 
 95.95 --     --      95.95 --     --     alu_select           
100.00 --     --     100.00 --     --     dispatch_select      
 81.78 100.00  80.39  46.74 --     100.00 genblk1[0].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[1].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[2].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[3].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[4].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[5].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[6].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 genblk1[7].rs_entry0 
100.00 --     --     100.00 --     --     issue_select         
  0.00 --     --       0.00 --     --     lsq_select           
 95.95 --     --      95.95 --     --     mult_select          



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1
                Total Covered Percent 
Totals          109   54      49.54   
Total Bits      1450  840     57.93   
Total Bits 0->1 725   420     57.93   
Total Bits 1->0 725   420     57.93   

                               
Ports          93   42  45.16  
Port Bits      1026 480 46.78  
Port Bits 0->1 513  240 46.78  
Port Bits 1->0 513  240 46.78  

                                
Signals          16  12  75.00  
Signal Bits      424 360 84.91  
Signal Bits 0->1 212 180 84.91  
Signal Bits 1->0 212 180 84.91  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
rsbank_enable          Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
rs_full                Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
entry_issue_idx[2:0]     Yes    Yes         Yes         
entry_en[7:0]            Yes    Yes         Yes         
entry_busy[7:0]          Yes    Yes         Yes         
entry_ALU_ready[7:0]     Yes    Yes         Yes         
entry_ALU_sel[7:0]       Yes    Yes         Yes         
entry_LSQ_ready[7:0]     No     No          No          
entry_LSQ_sel[7:0]       No     No          No          
entry_MULT_ready[7:0]    Yes    Yes         Yes         
entry_MULT_sel[7:0]      Yes    Yes         Yes         
entry_sel[7:0]           Yes    Yes         Yes         
rd_mem_file[7:0]         No     No          No          
wr_mem_file[7:0]         No     No          No          
prega_idx_file[7:0][4:0] Yes    Yes         Yes         
pregb_idx_file[7:0][4:0] Yes    Yes         Yes         
pdest_idx_file[7:0][4:0] Yes    Yes         Yes         
issue_flag               Yes    Yes         Yes         


===============================================================================
Module : superrs_tb
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 78.09  98.53 --      57.65 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/testbench/superrs_tb.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 78.09  98.53 --      57.65 --     --     superrs_tb 



-------------------------------------------------------------------------------
Line Coverage for Module : superrs_tb

             Line No.   Total   Covered  Percent
TOTAL                      204      201    98.53
ALWAYS             87        2        2   100.00
INITIAL            91       23       23   100.00
ROUTINE           142        8        8   100.00
ROUTINE           168       12       12   100.00
ROUTINE           230       12       12   100.00
ROUTINE           280        4        4   100.00
ROUTINE           297        4        4   100.00
ROUTINE           314        2        2   100.00
ROUTINE           368       14       14   100.00
ROUTINE           389       15       15   100.00
ROUTINE           408       13       10    76.92
ROUTINE           431        4        4   100.00
ROUTINE           441        4        4   100.00
ROUTINE           450        7        7   100.00
ROUTINE           461       61       61   100.00
INITIAL           537       19       19   100.00

86                      ////////////////////////////////////////////////////// clock generation /////////////////////////////////////////////////////////////
87         2/2          always #5 clock = ~clock;
88                      
89                      ///////////////////////////////////////////////////// reset trigger /////////////////////////////////////////////////////////////
90                      initial begin
91         1/1              reset = 0;
92         2/2              @(negedge clock); 
93         1/1              reset = 1;
94         1/1              prega_idx_in = 0;
95         1/1              pregb_idx_in = 0;
96         1/1              pdest_idx_in = 0;
97         1/1              prega_ready_in = 0;
98         1/1              pregb_ready_in = 0;
99         1/1              alu_func = 0;
100        1/1              inst_in = 0;
101        1/1              inst_valid = 0;
102        1/1              rd_mem = 0;
103        1/1              wr_mem = 0;
104        1/1              cdb_valid = 0;
105        1/1              cdb_tag = 0;
106        2/2              @(negedge clock); 
107        1/1              reset = 0;
108        2/2              @(posedge clock);
109        1/1              $display("######## Time:%0t RESET information: ########\n\
110                      prega_idx_out[0]:%0d prega_idx_out[1]:%0d\n\
111                      pregb_idx_out[0]:%0d pregb_idx_out[1]:%0d\n\
112                      pdest_idx_out[0]:%0d pdest_idx_out[1]:%0d\n\
113                      wr_mem_out[0]:%0d    wr_mem_out[1]:%0d\n\
114                      rd_mem_out[0]:%0d    rd_mem_out[1]:%0d\n\
115                      ALU_ready[0]:%0d     ALU_ready[1]:%0d\n\
116                      MULT_ready[0]:%0d    MULT_ready[1]:%0d\n\
117                      LSQ_ready[0]:%0d     LSQ_ready[1]:%0d\n\
118                      alu_func_out[0]:%0d  alu_func_out[1]:%0d\n\
119                      inst_out[0]:%0d      inst_out[1]:%0d\n\
120                      rs_full[0]:%0d       rs_full[1]:%0d\n\
121                     #########################################################\n \
122                                     ",$time, prega_idx_out[0],prega_idx_out[1], 
123                                              pregb_idx_out[0],pregb_idx_out[1],
124                                              pdest_idx_out[0],pdest_idx_out[1],
125                                              wr_mem_out[0],wr_mem_out[1],
126                                              rd_mem_out[0],rd_mem_out[1],
127                                              ALU_ready[0],ALU_ready[1], 
128                                              MULT_ready[0],MULT_ready[1],
129                                              LSQ_ready[0],LSQ_ready[1], 
130                                              alu_func_out[0],alu_func_out[1],
131                                              inst_out[0],inst_out[1],
132                                              rs_full[0],rs_full[1]);
133                     //     `ifdef DEBUG
134                     //      $display("######### DEBUG Reset information ##########\n\
135                     // entry_busy:%b entry_en:%b entry_sel:%b\n\
136                     // ###########################################\n",debug_entry_busy,debug_entry_en,debug_entry_sel);
137                     //     `endif
138        1/1               $display("###########  Finish reset ###############\n");
139                     end
140                     
141                     task trigger_reset();
142        2/2              @(negedge clock);
143        1/1              reset = 1;
144        2/2              @(negedge clock);
145        2/2              @(negedge clock);
146        1/1              reset = 0;
147                     endtask
148                     
149                     //////////////////////////////////////// dispatch instruction(driver) ///////////////////////////////////////////////
150                     task dispatch_0();
151                         input dp_inst_valid;
152                         input dp_prega_ready_in;
153                         input [`PREG_IDX_WIDTH-1:0] dp_prega_idx_in;
154                         input dp_pregb_ready_in;
155                         input [`PREG_IDX_WIDTH-1:0] dp_pregb_idx_in;
156                         input [`PREG_IDX_WIDTH-1:0] dp_pdest_idx_in;
157                         input dp_wr_mem;
158                         input dp_rd_mem;
159                         input ALU_FUNC dp_alu_func;
160                         input INST dp_inst;
161                         input dp_rs_full;
162                         // if(dp_rs_full) fork
163                         //     @(posedge clock)
164                         //     $display("######## Time:%0t RS is full ########\n", $time);
165                         // join_none
166                         // else 
167                         begin
168        1/1                  inst_valid[0] = dp_inst_valid;
169        1/1                  prega_idx_in[0] = dp_prega_idx_in;
170        1/1                  pregb_idx_in[0] = dp_pregb_idx_in;
171        1/1                  pdest_idx_in[0] = dp_pdest_idx_in;
172        1/1                  prega_ready_in[0] = dp_prega_ready_in;
173        1/1                  pregb_ready_in[0] = dp_pregb_ready_in;
174        1/1                  wr_mem[0] = dp_wr_mem;
175        1/1                  rd_mem[0] = dp_rd_mem;
176        1/1                  inst_in[0] = dp_inst;
177        1/1                  alu_func[0] = dp_alu_func;
178                             fork
179        1/1                  @(posedge clock) begin
180        1/1                  $display("######## Time:%0t Dispatch instruction to RS[0] information: ########\n\
181                      inst_valid[0]:%0d\n\
182                      prega_ready_in[0]:%0d  prega_idx_in[0]:%0d\n\
183                      pregb_ready_in[0]:%0d  pregb_idx_in[0]:%0d\n\
184                      pdest_idx_in[0]:%0d\n\
185                      wr_mem_in[0]:%0d\n\
186                      rd_mem_in[0]:%0d\n\
187                      alu_func_in[0]:%0d\n\
188                      inst_in[0]:%0d\n\
189                      rs_full[0]:%0d\n\
190                     ##########################################################\n\
191                                     ",$time,
192                                     inst_valid[0],
193                                     prega_ready_in[0],prega_idx_in[0],
194                                     pregb_ready_in[0],pregb_idx_in[0],
195                                     pdest_idx_in[0],
196                                     wr_mem[0],
197                                     rd_mem[0],
198                                     alu_func[0],
199                                     inst_in[0],
200                                     rs_full[0]);
201                     //         `ifdef DEBUG
202                     //             $display("################## Time:%0t Dispatch debug ################\n\
203                     //  entry_busy:%b entry_en:%b entry_sel:%b\n\
204                     // ############################################################\n",
205                     //         $time,debug_entry_busy,debug_entry_en,debug_entry_sel);
206                     //         `endif
207                             end
208                             join_none
209                         end
210                     endtask
211                     
212                     task dispatch_1();
213                         input dp_inst_valid;
214                         input dp_prega_ready_in;
215                         input [`PREG_IDX_WIDTH-1:0] dp_prega_idx_in;
216                         input dp_pregb_ready_in;
217                         input [`PREG_IDX_WIDTH-1:0] dp_pregb_idx_in;
218                         input [`PREG_IDX_WIDTH-1:0] dp_pdest_idx_in;
219                         input dp_wr_mem;
220                         input dp_rd_mem;
221                         input ALU_FUNC dp_alu_func;
222                         input INST dp_inst;
223                         input dp_rs_full;
224                         // if(dp_rs_full) fork
225                         //     @(posedge clock)
226                         //     $display("######## Time:%0t RS is full ########\n", $time);
227                         // join_none
228                         // else 
229                         begin
230        1/1                  inst_valid[1] = dp_inst_valid;
231        1/1                  prega_idx_in[1] = dp_prega_idx_in;
232        1/1                  pregb_idx_in[1] = dp_pregb_idx_in;
233        1/1                  pdest_idx_in[1] = dp_pdest_idx_in;
234        1/1                  prega_ready_in[1] = dp_prega_ready_in;
235        1/1                  pregb_ready_in[1] = dp_pregb_ready_in;
236        1/1                  wr_mem[1] = dp_wr_mem;
237        1/1                  rd_mem[1] = dp_rd_mem;
238        1/1                  inst_in[1] = dp_inst;
239        1/1                  alu_func[1] = dp_alu_func;
240                             fork
241        1/1                  @(posedge clock) begin
242        1/1                  $display("######## Time:%0t Dispatch instruction to RS[1] information: ########\n\
243                      inst_valid[1]:%0d\n\
244                      prega_ready_in[1]:%0d  prega_idx_in[1]:%0d\n\
245                      pregb_ready_in[1]:%0d  pregb_idx_in[1]:%0d\n\
246                      pdest_idx_in[1]:%0d\n\
247                      wr_mem_in[1]:%0d\n\
248                      rd_mem_in[1]:%0d\n\
249                      alu_func_in[1]:%0d\n\
250                      inst_in[1]:%0d\n\
251                      rs_full[1]:%0d\n\
252                     ##########################################################\n\
253                                     ",$time,
254                                     inst_valid[1],
255                                     prega_ready_in[1],prega_idx_in[1],
256                                     pregb_ready_in[1],pregb_idx_in[1],
257                                     pdest_idx_in[1],
258                                     wr_mem[1],
259                                     rd_mem[1],
260                                     alu_func[1],
261                                     inst_in[1],
262                                     rs_full[1]);
263                     //         `ifdef DEBUG
264                     //             $display("################## Time:%0t Dispatch debug ################\n\
265                     //  entry_busy:%b entry_en:%b entry_sel:%b\n\
266                     // ############################################################\n",
267                     //         $time,debug_entry_busy,debug_entry_en,debug_entry_sel);
268                     //         `endif
269                             end
270                             join_none
271                         end
272                     endtask
273                     
274                     
275                     //////////////////////////////////////////// complete stage CDB signal ///////////////////////////////////////////
276                     task complete_0();
277                         input cp_cdb_valid;
278                         input [`PREG_IDX_WIDTH-1:0] cp_cdb_tag;
279                         begin
280        1/1                  cdb_valid[0] = cp_cdb_valid;
281        1/1                  cdb_tag[0] = cp_cdb_tag;
282                             fork
283        1/1                  @(posedge clock)
284        1/1                  $display("######## Time:%0t CDB[0] broadcast information: ########\n\
285                      cdb_valid[0]:%0d\n\
286                      cdb_tag[0]:%0d\n\
287                     ##########################################################\n \
288                                     ",$time, cdb_valid[0],cdb_tag[0]);
289                             join_none
290                         end
291                     endtask
292                     
293                     task complete_1();
294                         input cp_cdb_valid;
295                         input [`PREG_IDX_WIDTH-1:0] cp_cdb_tag;
296                         begin
297        1/1                  cdb_valid[1] = cp_cdb_valid;
298        1/1                  cdb_tag[1] = cp_cdb_tag;
299                             fork
300        1/1                  @(posedge clock)
301        1/1                  $display("######## Time:%0t CDB[1] broadcast information: ########\n\
302                      cdb_valid[1]:%0d\n\
303                      cdb_tag[1]:%0d\n\
304                     ##########################################################\n \
305                                     ",$time, cdb_valid[1],cdb_tag[1]);
306                             join_none
307                         end
308                     endtask
309                     
310                     //////////////////////////////////////// monite issue stage(monitor) /////////////////////////////////////////////////////////
311                     
312                     task rs_out_monitor();
313                         fork
314        1/1              @(posedge clock) begin
315        1/1              $display("######## Time:%0t Issue information: ########\n\
316                      prega_idx_out[0]:%0d prega_idx_out[1]:%0d\n\
317                      pregb_idx_out[0]:%0d pregb_idx_out[1]:%0d\n\
318                      pdest_idx_out[0]:%0d pdest_idx_out[1]:%0d\n\
319                      wr_mem_out[0]:%0d    wr_mem_out[1]:%0d\n\
320                      rd_mem_out[0]:%0d    rd_mem_out[1]:%0d\n\
321                      ALU_ready[0]:%0d     ALU_ready[1]:%0d\n\
322                      MULT_ready[0]:%0d    MULT_ready[1]:%0d\n\
323                      LSQ_ready[0]:%0d     LSQ_ready[1]:%0d\n\
324                      alu_func_out[0]:%0d  alu_func_out[1]:%0d\n\
325                      inst_out[0]:%0d      inst_out[1]:%0d\n\
326                      rs_full[0]:%0d       rs_full[1]:%0d\n\
327                     #########################################################\n \
328                                     ",$time, prega_idx_out[0],prega_idx_out[1], 
329                                              pregb_idx_out[0],pregb_idx_out[1],
330                                              pdest_idx_out[0],pdest_idx_out[1],
331                                              wr_mem_out[0],wr_mem_out[1],
332                                              rd_mem_out[0],rd_mem_out[1],
333                                              ALU_ready[0],ALU_ready[1], 
334                                              MULT_ready[0],MULT_ready[1],
335                                              LSQ_ready[0],LSQ_ready[1], 
336                                              alu_func_out[0],alu_func_out[1],
337                                              inst_out[0],inst_out[1],
338                                              rs_full[0],rs_full[1]);
339                     
340                     //     `ifdef DEBUG
341                     //             $display("#################### Time:%0t Issue debug ###################\n\
342                     //  entry_busy:%b entry_en:%b entry_sel:%b\n\
343                     //  entry_ALU_ready:%b entry_LSQ_ready:%b entry_MULT_ready:%b\n\
344                     //  entry_ALU_sel:%b entry_LSQ_sel:%b entry_MULT_sel:%b\n\
345                     //  prega_ready:%b pregb_ready:%b cdb_prega_ready:%b cdb_pregb_ready:%b\n\
346                     // ############################################################\n",
347                     //         $time,
348                     //         debug_entry_busy,debug_entry_en,debug_entry_sel,
349                     //         debug_entry_ALU_ready,debug_entry_LSQ_ready,debug_entry_MULT_ready,
350                     //         debug_entry_ALU_sel,debug_entry_LSQ_sel,debug_entry_MULT_sel,
351                     //         debug_prega_ready,debug_pregb_ready,debug_cdb_prega_ready,debug_cdb_pregb_ready);
352                     //     `endif
353                         end
354                         join_none
355                     endtask
356                     
357                     /////////////////////////////////////////////////// test case //////////////////////////////////////////////////////////////
358                     /* 
359                     Dispatch order: rs_enable, prega_ready_in, prega_idx_in, pregb_ready_in, pregb_idx_in,pdest_idx_in, wr_mem, rd_mem, alu_func, inst_in, dp_rs_full 
360                     Complete order: cdb_valid, cdb_tag
361                     Issue order: mon_prega_idx_out, mon_pregb_idx_out, mon_pdest_idx_out, mon_wr_mem, mon_rd_mem,mon_ALU_ready, mon_MULT_ready, mon_LSQ_ready, mon_alu_func, mon_inst, mon_rs_full
362                     */
363                     
364                     bit [`PREG_IDX_WIDTH-1:0] pra_t, prb_t, pd_t;
365                     INST inst_t;
366                     ALU_FUNC alu_func_t;
367                     task constant_test(input integer entry_idx);
368        1/1               $display("##################################################################################\n\
369                     ################ constantly dispatch and issue for entry %0d #####################\n\
370                     ##################################################################################\n",entry_idx);
371        1/1              repeat(10) begin
372        1/1                  pra_t = $urandom_range(0,32);
373        1/1                  prb_t = $urandom_range(0,32);
374        1/1                  pd_t = $urandom_range(0,32);
375        1/1                  inst_t = $urandom_range(0,5000);
376        1/1                  alu_func_t = $urandom_range(0,11);
377        2/2                  @(negedge clock);
378                             begin
379        1/1                      complete_0(0,0);
380        1/1                      complete_1(0,0);
381        1/1                      rs_out_monitor();
382        1/1                      dispatch_0(1,1,pra_t,1,prb_t,pd_t,0,0,alu_func_t,inst_t,rs_full);
383        1/1                      dispatch_1(1,1,pra_t,1,prb_t,pd_t,0,0,alu_func_t,inst_t,rs_full);
384                             end
385                         end
386                     endtask
387                     
388                     task fully_insert(input a_ready, input b_ready);
389        1/1              repeat(`NUM_RS_ENTRIES) begin
390        1/1                  pra_t = $urandom_range(0,32);
391        1/1                  prb_t = $urandom_range(0,32);
392        1/1                  pd_t = $urandom_range(0,32);
393        1/1                  inst_t = $urandom_range(0,5000);
394        1/1                  alu_func_t = $urandom_range(0,11);
395        2/2                  @(negedge clock);
396                             begin
397        1/1                      complete_0(0,0);
398        1/1                      complete_1(0,0);
399        1/1                      rs_out_monitor();
400        1/1                      dispatch_0(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
401        1/1                      dispatch_1(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
402                             end
403                         end
                        REPEAT_FALSE
404        2/2              @(negedge clock);
405                     endtask
406                     
407                     task full_test();
408        1/1          $display("############################################################################\n\
409                     ################ test if PR1 or PR2 can fill up the RS #####################\n\
410                     ############################################################################\n");
411        1/1              fully_insert(0,1);
412        2/2              if(rs_full) trigger_reset();
413                         else begin
414        0/1     ==>          $error("############ Tims:%0t: Insert %0d insts with pr1 NOT ready while RS is not full ##############",$time,`NUM_RS_ENTRIES);
415                         end
416        1/1              fully_insert(1,0);
417        2/2              if(rs_full) trigger_reset();
418                         else begin
419        0/1     ==>          $error("############ Tims:%0t: Insert %0d insts with pr2 NOT ready while RS is not full ##############",$time,`NUM_RS_ENTRIES);
420                         end
421        1/1              fully_insert(0,0);
422        2/2              if(rs_full) trigger_reset();
423                         else begin
424        0/1     ==>          $error("############ Tims:%0t: Insert %0d insts with both pr1 and pr2 NOT ready while RS is not full ##############",$time,`NUM_RS_ENTRIES);
425                         end
426                     endtask
427                     
428                     task insert_unvalid_inst_0();
429                         input a_ready;
430                         input b_ready;
431        2/2              @(negedge clock);
432                         begin
433        1/1                  complete_0(0,0);
434        1/1                  dispatch_0(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
435                         end
436                     endtask
437                     
438                     task insert_unvalid_inst_1();
439                         input a_ready;
440                         input b_ready;
441        2/2              @(negedge clock);
442                         begin
443        1/1                  complete_1(0,0);
444        1/1                  dispatch_1(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
445                         end
446                     endtask
447                     
448                     integer i,k;
449                     task test_every_entry();
450        1/1              i = 0;
451        1/1              repeat(`NUM_RS_ENTRIES) begin
452        1/1              constant_test(i);
453        1/1              insert_unvalid_inst_0(0,0);
454        1/1              insert_unvalid_inst_1(0,0);
455        1/1              i++;
456                         end
                        REPEAT_FALSE
457        1/1              trigger_reset();
458                     endtask
459                     
460                     task cdb_test(input a_ready, input b_ready);
461        1/1              if (a_ready | b_ready) begin
462        1/1                  i=1;
463        1/1                  repeat(`NUM_RS_ENTRIES) begin
464        2/2                  @(negedge clock);
465        1/1                      pra_t = i;
466        1/1                      prb_t = $urandom_range(0,31);
467        1/1                      pd_t = $urandom_range(0,31);
468        1/1                      inst_t = $urandom_range(0,5000);
469        1/1                      alu_func_t = $urandom_range(0,11);
470                                 begin
471        1/1                      dispatch_0(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
472        1/1                      dispatch_1(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
473        1/1                      complete_0(0,0);
474        1/1                      complete_1(0,0);
475        1/1                      rs_out_monitor();
476                                 end
477        1/1                      i++;
478                             end
                        REPEAT_FALSE
479        1/1                  repeat(`NUM_RS_ENTRIES) begin
480        1/1                      i--;
481        2/2                      @(negedge clock);
482                                 begin
483        1/1                      dispatch_0(0,0,0,0,0,0,0,0,0,0,rs_full);
484        1/1                      dispatch_1(0,0,0,0,0,0,0,0,0,0,rs_full);
485        1/1                      $display("rui%0d",i);
486        1/1                      complete_0(1,i);
487        1/1                      complete_1(1,i);
488        1/1                      rs_out_monitor();
489                                 end
490                             end
491                         end
492                         else begin
493        2/2                  i=1;k=10;
494        1/1                  repeat(`NUM_RS_ENTRIES) begin
495        2/2                  @(negedge clock);
496        1/1                      pra_t = i;
497        1/1                      prb_t = k;
498        1/1                      pd_t = $urandom_range(0,31);
499        1/1                      inst_t = $urandom_range(0,5000);
500        1/1                      alu_func_t = $urandom_range(0,11);
501                                 begin
502        1/1                      dispatch_0(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
503        1/1                      dispatch_1(1,a_ready,pra_t,b_ready,prb_t,1,0,0,alu_func_t,inst_t,rs_full);
504        1/1                      complete_0(0,0);
505        1/1                      complete_1(0,0);
506        1/1                      rs_out_monitor();
507                                 end
508        2/2                      i++;k++;
509                             end
                        REPEAT_FALSE
510        1/1                  repeat(`NUM_RS_ENTRIES) begin
511        1/1                      i--;
512        2/2                      @(negedge clock);
513                                 begin
514        1/1                      dispatch_0(0,0,0,0,0,0,0,0,0,0,rs_full);
515        1/1                      dispatch_1(0,0,0,0,0,0,0,0,0,0,rs_full);
516        1/1                      complete_0(1,i);
517        1/1                      complete_1(1,i);
518        1/1                      rs_out_monitor();
519                                 end
520                             end
                        REPEAT_FALSE
521        1/1                  repeat(`NUM_RS_ENTRIES) begin
522        1/1                      k--;
523        2/2                      @(negedge clock);
524                                 begin
525        1/1                      dispatch_0(0,0,0,0,0,0,0,0,0,0,rs_full);
526        1/1                      dispatch_1(0,0,0,0,0,0,0,0,0,0,rs_full);
527        1/1                      complete_0(1,k);
528        1/1                      complete_1(1,k);
529        1/1                      rs_out_monitor();
530                                 end
531                             end
532                         end
533                     endtask
534                     
535                     /////////////////////////////////////////// testbench /////////////////////////////////////////////////////////////
536                     initial begin
537        1/1              $display("########### Start RS testing ############");
538        1/1              clock = 0;
539        3/3              repeat(3) @(negedge clock);
                        REPEAT_FALSE
540        1/1              constant_test(1);
541        1/1              repeat(20) begin
542        1/1              test_every_entry();
543        1/1              trigger_reset();
544        1/1              full_test();
545        1/1              trigger_reset();
546        1/1              cdb_test(0,1);
547        1/1              trigger_reset();
548        1/1              cdb_test(1,0);
549        1/1              trigger_reset();
550        1/1              cdb_test(0,0);
551                         end
                        REPEAT_FALSE
552        2/2              @(negedge clock);
553        1/1              $finish;

-------------------------------------------------------------------------------
Toggle Coverage for Module : superrs_tb
                Total Covered Percent 
Totals          60    32      53.33   
Total Bits      680   392     57.65   
Total Bits 0->1 340   196     57.65   
Total Bits 1->0 340   196     57.65   

                                
Signals          60  32  53.33  
Signal Bits      680 392 57.65  
Signal Bits 0->1 340 196 57.65  
Signal Bits 1->0 340 196 57.65  

Signal Details
                        Toggle Toggle 1->0 Toggle 0->1 
clock                   Yes    Yes         Yes         
reset                   Yes    Yes         Yes         
prega_ready_in[1:0]     Yes    Yes         Yes         
pregb_ready_in[1:0]     Yes    Yes         Yes         
rd_mem[1:0]             No     No          No          
wr_mem[1:0]             No     No          No          
cdb_valid[1:0]          Yes    Yes         Yes         
inst_valid[1:0]         Yes    Yes         Yes         
prega_idx_in[1:0][4:0]  Yes    Yes         Yes         
pregb_idx_in[1:0][4:0]  Yes    Yes         Yes         
pdest_idx_in[1:0][4:0]  Yes    Yes         Yes         
cdb_tag[1:0][4:0]       Yes    Yes         Yes         
rd_mem_out[1:0]         No     No          No          
wr_mem_out[1:0]         No     No          No          
ALU_ready[1:0]          Yes    Yes         Yes         
MULT_ready[1:0]         Yes    Yes         Yes         
LSQ_ready[1:0]          No     No          No          
rs_full[1:0]            Yes    Yes         Yes         
prega_idx_out[1:0][4:0] Yes    Yes         Yes         
pregb_idx_out[1:0][4:0] Yes    Yes         Yes         
pdest_idx_out[1:0][4:0] Yes    Yes         Yes         
pra_t[4:0]              Yes    Yes         Yes         
prb_t[4:0]              Yes    Yes         Yes         
pd_t[4:0]               Yes    Yes         Yes         
inst_t.j.opcode[6:0]    Yes    Yes         Yes         
inst_t.j.rd[4:0]        Yes    Yes         Yes         
inst_t.j.f[0]           Yes    Yes         Yes         
inst_t.j.f[7:1]         No     No          No          
inst_t.j.s              No     No          No          
inst_t.j.et[9:0]        No     No          No          
inst_t.j.of             No     No          No          
inst_t.u.opcode[6:0]    Yes    Yes         Yes         
inst_t.u.rd[4:0]        Yes    Yes         Yes         
inst_t.u.imm[0]         Yes    Yes         Yes         
inst_t.u.imm[19:1]      No     No          No          
inst_t.b.opcode[6:0]    Yes    Yes         Yes         
inst_t.b.f              Yes    Yes         Yes         
inst_t.b.et[3:0]        Yes    Yes         Yes         
inst_t.b.funct3[0]      Yes    Yes         Yes         
inst_t.b.funct3[2:1]    No     No          No          
inst_t.b.rs1[4:0]       No     No          No          
inst_t.b.rs2[4:0]       No     No          No          
inst_t.b.s[5:0]         No     No          No          
inst_t.b.of             No     No          No          
inst_t.s.opcode[6:0]    Yes    Yes         Yes         
inst_t.s.set[4:0]       Yes    Yes         Yes         
inst_t.s.funct3[0]      Yes    Yes         Yes         
inst_t.s.funct3[2:1]    No     No          No          
inst_t.s.rs1[4:0]       No     No          No          
inst_t.s.rs2[4:0]       No     No          No          
inst_t.s.off[6:0]       No     No          No          
inst_t.i.opcode[6:0]    Yes    Yes         Yes         
inst_t.i.rd[4:0]        Yes    Yes         Yes         
inst_t.i.funct3[0]      Yes    Yes         Yes         
inst_t.i.funct3[2:1]    No     No          No          
inst_t.i.rs1[4:0]       No     No          No          
inst_t.i.imm[11:0]      No     No          No          
inst_t.r.opcode[6:0]    Yes    Yes         Yes         
inst_t.r.rd[4:0]        Yes    Yes         Yes         
inst_t.r.funct3[0]      Yes    Yes         Yes         
inst_t.r.funct3[2:1]    No     No          No          
inst_t.r.rs1[4:0]       No     No          No          
inst_t.r.rs2[4:0]       No     No          No          
inst_t.r.funct7[6:0]    No     No          No          
inst_t.inst[12:0]       Yes    Yes         Yes         
inst_t.inst[31:13]      No     No          No          
alu_func_t[3:0]         Yes    Yes         Yes         
alu_func_t[4]           No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 78.09  98.53 --      57.65 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.41  99.73  80.39  49.51 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 78.09  98.53 --      57.65 --     --     superrs_tb 


Parent : 

none
----------------


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
 82.43 100.00  80.39  49.31 --     100.00 DUT  



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : rs_entry
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_bank.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                          
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0 
 81.78 100.00  80.39  46.74 --     100.00 superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0 



-------------------------------------------------------------------------------
Line Coverage for Module : rs_entry

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Module : rs_entry

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Module : rs_entry
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Module : rs_entry
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[0].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[1].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[2].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[3].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[4].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[5].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[6].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_0.genblk1[7].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[0].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[1].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[2].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[3].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[4].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[5].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[6].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 81.78 100.00  80.39  46.74 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 81.78 100.00  80.39  46.74 --     100.00 rs_entry 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Line Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0

             Line No.   Total   Covered  Percent
TOTAL                       56       56   100.00
ALWAYS            203       21       21   100.00
ALWAYS            233       35       35   100.00

202                     always_ff @(posedge clock) begin
203        1/1              if(reset) begin
204        1/1                  prega_idx_out       <= `SD `ZERO_PREG;
205        1/1                  pregb_idx_out       <= `SD `ZERO_PREG;  
206        1/1                  pdest_idx_out       <= `SD `ZERO_PREG; 
207        1/1                  prega_ready         <= `SD 1'b0;
208        1/1                  pregb_ready         <= `SD 1'b0;
209        1/1                  busy                <= `SD 1'b0;
210                     
211        1/1                  inst_out            <= `SD `NOP; 
212        1/1                  alu_func_out        <= `SD ALU_ADD;
213        1/1                  rd_mem_out          <= `SD 1'b0;
214        1/1                  wr_mem_out          <= `SD 1'b0;
215                     
216                         end else begin
217        1/1                  prega_idx_out       <= `SD n_prega_idx;
218        1/1                  pregb_idx_out       <= `SD n_pregb_idx;
219        1/1                  pdest_idx_out       <= `SD n_pdest_idx;
220        1/1                  prega_ready         <= `SD n_prega_ready;
221        1/1                  pregb_ready         <= `SD n_pregb_ready;
222        1/1                  busy                <= `SD n_busy;
223                     
224        1/1                  inst_out            <= `SD n_inst_out;
225        1/1                  alu_func_out        <= `SD n_alu_func_out;
226        1/1                  rd_mem_out          <= `SD n_rd_mem_out;
227        1/1                  wr_mem_out          <= `SD n_wr_mem_out;
228                            
229                         end
230                     end
231                     
232                     always_comb begin
233        1/1              unique if(enable && !busy) begin
234        1/1                  n_prega_idx     = prega_idx_in;
235        1/1                  n_pregb_idx     = pregb_idx_in;
236        1/1                  n_pdest_idx     = pdest_idx_in;
237        1/1                  n_prega_ready   = prega_ready_in;
238        1/1                  n_pregb_ready   = pregb_ready_in;
239        1/1                  n_inst_out      = inst_in;
240        1/1                  n_alu_func_out  = alu_func;
241        1/1                  n_rd_mem_out    = rd_mem;
242        1/1                  n_wr_mem_out    = wr_mem;
243        1/1                  n_busy          = 1'b1;
244        1/1              end else if(busy && !enable) begin
245        1/1                  n_prega_idx     = prega_idx_out;
246        1/1                  n_pregb_idx     = pregb_idx_out;
247        1/1                  n_pdest_idx     = pdest_idx_out;
248        1/1                  n_prega_ready   = prega_ready | cdb_prega_ready;
249        1/1                  n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250        1/1                  n_inst_out      = inst_out;
251        1/1                  n_alu_func_out  = alu_func_out;
252        1/1                  n_rd_mem_out    = rd_mem_out;
253        1/1                  n_wr_mem_out    = wr_mem_out;
254        1/1                  n_busy          = 1'b1;
255        1/1                  if(select) begin
256        1/1                      n_busy = 1'b0;
257                             end else begin
258        1/1                      n_busy = 1'b1;
259                             end
260                         end else begin
261        1/1                  n_prega_idx     = prega_idx_out;
262        1/1                  n_pregb_idx     = pregb_idx_out;
263        1/1                  n_pdest_idx     = pdest_idx_out;
264        1/1                  n_prega_ready   = prega_ready;
265        1/1                  n_pregb_ready   = pregb_ready;
266        1/1                  n_inst_out      = inst_out;
267        1/1                  n_alu_func_out  = alu_func_out;
268        1/1                  n_rd_mem_out    = rd_mem_out;
269        1/1                  n_wr_mem_out    = wr_mem_out;
270        1/1                  n_busy          = busy;

-------------------------------------------------------------------------------
Cond Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0

               Total   Covered  Percent
Conditions         51       41    80.39
Logical            51       41    80.39
Non-Logical         0        0
Event               0        0

 LINE       233
 EXPRESSION (enable && ((!busy)))
             ---1--    ----2----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       244
 EXPRESSION (busy && ((!enable)))
             --1-    -----2-----

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == prega_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == prega_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       186
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == prega_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 EXPRESSION ((cdb_valid[0] && (cdb_tag[0] == pregb_idx_out)) || (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out)))
             -----------------------1-----------------------    -----------------------2-----------------------

-1- -2- Status
 0   0  Covered
 0   1  Not Covered
 1   0  Not Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[0] && (cdb_tag[0] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       189
 SUB-EXPRESSION (cdb_valid[1] && (cdb_tag[1] == pregb_idx_out))
                 ------1-----    --------------2--------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 EXPRESSION ((prega_ready || cdb_prega_ready) && (pregb_ready || cdb_pregb_ready))
             ----------------1---------------    ----------------2---------------

-1- -2- Status
 0   1  Covered
 1   0  Covered
 1   1  Covered

 LINE       193
 SUB-EXPRESSION (prega_ready || cdb_prega_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       193
 SUB-EXPRESSION (pregb_ready || cdb_pregb_ready)
                 -----1-----    -------2-------

-1- -2- Status
 0   0  Covered
 0   1  Covered
 1   0  Covered

 LINE       194
 EXPRESSION (busy && preg_ready && ((rd_mem_out | wr_mem_out)))
             --1-    -----2----    -------------3-------------

-1- -2- -3- Status
 0   1   1  Not Covered
 1   0   1  Not Covered
 1   1   0  Covered
 1   1   1  Not Covered

 LINE       195
 EXPRESSION (busy && preg_ready && ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU)))
             --1-    -----2----    ------------------------------------------------------------3-----------------------------------------------------------

-1- -2- -3- Status
 0   1   1  Covered
 1   0   1  Covered
 1   1   0  Covered
 1   1   1  Covered

 LINE       195
 SUB-EXPRESSION ((alu_func_out == ALU_MUL) || (alu_func_out == ALU_MULH) || (alu_func_out == ALU_MULHSU) || (alu_func_out == ALU_MULHU))
                 ------------1------------    -------------2------------    --------------3-------------    -------------4-------------

-1- -2- -3- -4- Status
 0   0   0   0  Covered
 0   0   0   1  Not Covered
 0   0   1   0  Not Covered
 0   1   0   0  Covered
 1   0   0   0  Covered

 LINE       198
 EXPRESSION (busy && preg_ready && ((!LSQ_ready)) && ((!MULT_ready)))
             --1-    -----2----    -------3------    -------4-------

-1- -2- -3- -4- Status
 0   1   1   1  Covered
 1   0   1   1  Covered
 1   1   0   1  Not Covered
 1   1   1   0  Covered
 1   1   1   1  Covered

-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0
                Total Covered Percent 
Totals          143   67      46.85   
Total Bits      1536  718     46.74   
Total Bits 0->1 768   359     46.74   
Total Bits 1->0 768   359     46.74   

                               
Ports          94   43  45.74  
Port Bits      1028 482 46.89  
Port Bits 0->1 514  241 46.89  
Port Bits 1->0 514  241 46.89  

                                
Signals          49  24  48.98  
Signal Bits      508 236 46.46  
Signal Bits 0->1 254 118 46.46  
Signal Bits 1->0 254 118 46.46  

Port Details
                       Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                  Yes    Yes         Yes         INPUT     
reset                  Yes    Yes         Yes         INPUT     
prega_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pregb_idx_in[4:0]      Yes    Yes         Yes         INPUT     
pdest_idx_in[4:0]      Yes    Yes         Yes         INPUT     
prega_ready_in         Yes    Yes         Yes         INPUT     
pregb_ready_in         Yes    Yes         Yes         INPUT     
inst_in.j.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.j.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.j.f[0]         Yes    Yes         Yes         INPUT     
inst_in.j.f[7:1]       No     No          No          INPUT     
inst_in.j.s            No     No          No          INPUT     
inst_in.j.et[9:0]      No     No          No          INPUT     
inst_in.j.of           No     No          No          INPUT     
inst_in.u.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.u.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.u.imm[0]       Yes    Yes         Yes         INPUT     
inst_in.u.imm[19:1]    No     No          No          INPUT     
inst_in.b.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.b.f            Yes    Yes         Yes         INPUT     
inst_in.b.et[3:0]      Yes    Yes         Yes         INPUT     
inst_in.b.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.b.funct3[2:1]  No     No          No          INPUT     
inst_in.b.rs1[4:0]     No     No          No          INPUT     
inst_in.b.rs2[4:0]     No     No          No          INPUT     
inst_in.b.s[5:0]       No     No          No          INPUT     
inst_in.b.of           No     No          No          INPUT     
inst_in.s.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.s.set[4:0]     Yes    Yes         Yes         INPUT     
inst_in.s.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.s.funct3[2:1]  No     No          No          INPUT     
inst_in.s.rs1[4:0]     No     No          No          INPUT     
inst_in.s.rs2[4:0]     No     No          No          INPUT     
inst_in.s.off[6:0]     No     No          No          INPUT     
inst_in.i.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.i.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.i.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.i.funct3[2:1]  No     No          No          INPUT     
inst_in.i.rs1[4:0]     No     No          No          INPUT     
inst_in.i.imm[11:0]    No     No          No          INPUT     
inst_in.r.opcode[6:0]  Yes    Yes         Yes         INPUT     
inst_in.r.rd[4:0]      Yes    Yes         Yes         INPUT     
inst_in.r.funct3[0]    Yes    Yes         Yes         INPUT     
inst_in.r.funct3[2:1]  No     No          No          INPUT     
inst_in.r.rs1[4:0]     No     No          No          INPUT     
inst_in.r.rs2[4:0]     No     No          No          INPUT     
inst_in.r.funct7[6:0]  No     No          No          INPUT     
inst_in.inst[12:0]     Yes    Yes         Yes         INPUT     
inst_in.inst[31:13]    No     No          No          INPUT     
alu_func[3:0]          Yes    Yes         Yes         INPUT     
alu_func[4]            No     No          No          INPUT     
rd_mem                 No     No          No          INPUT     
wr_mem                 No     No          No          INPUT     
cdb_valid[1:0]         Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]      Yes    Yes         Yes         INPUT     
enable                 Yes    Yes         Yes         INPUT     
select                 Yes    Yes         Yes         INPUT     
inst_out.j.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.j.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.j.f[0]        Yes    Yes         Yes         OUTPUT    
inst_out.j.f[7:1]      No     No          No          OUTPUT    
inst_out.j.s           No     No          No          OUTPUT    
inst_out.j.et[9:0]     No     No          No          OUTPUT    
inst_out.j.of          No     No          No          OUTPUT    
inst_out.u.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.u.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[0]      Yes    Yes         Yes         OUTPUT    
inst_out.u.imm[19:1]   No     No          No          OUTPUT    
inst_out.b.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.b.f           Yes    Yes         Yes         OUTPUT    
inst_out.b.et[3:0]     Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.b.funct3[2:1] No     No          No          OUTPUT    
inst_out.b.rs1[4:0]    No     No          No          OUTPUT    
inst_out.b.rs2[4:0]    No     No          No          OUTPUT    
inst_out.b.s[5:0]      No     No          No          OUTPUT    
inst_out.b.of          No     No          No          OUTPUT    
inst_out.s.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.s.set[4:0]    Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.s.funct3[2:1] No     No          No          OUTPUT    
inst_out.s.rs1[4:0]    No     No          No          OUTPUT    
inst_out.s.rs2[4:0]    No     No          No          OUTPUT    
inst_out.s.off[6:0]    No     No          No          OUTPUT    
inst_out.i.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.i.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.i.funct3[2:1] No     No          No          OUTPUT    
inst_out.i.rs1[4:0]    No     No          No          OUTPUT    
inst_out.i.imm[11:0]   No     No          No          OUTPUT    
inst_out.r.opcode[6:0] Yes    Yes         Yes         OUTPUT    
inst_out.r.rd[4:0]     Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[0]   Yes    Yes         Yes         OUTPUT    
inst_out.r.funct3[2:1] No     No          No          OUTPUT    
inst_out.r.rs1[4:0]    No     No          No          OUTPUT    
inst_out.r.rs2[4:0]    No     No          No          OUTPUT    
inst_out.r.funct7[6:0] No     No          No          OUTPUT    
inst_out.inst[12:0]    Yes    Yes         Yes         OUTPUT    
inst_out.inst[31:13]   No     No          No          OUTPUT    
alu_func_out[3:0]      Yes    Yes         Yes         OUTPUT    
alu_func_out[4]        No     No          No          OUTPUT    
prega_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pregb_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
pdest_idx_out[4:0]     Yes    Yes         Yes         OUTPUT    
rd_mem_out             No     No          No          OUTPUT    
wr_mem_out             No     No          No          OUTPUT    
ALU_ready              Yes    Yes         Yes         OUTPUT    
LSQ_ready              No     No          No          OUTPUT    
MULT_ready             Yes    Yes         Yes         OUTPUT    
busy                   Yes    Yes         Yes         OUTPUT    

Signal Details
                         Toggle Toggle 1->0 Toggle 0->1 
n_prega_idx[4:0]         Yes    Yes         Yes         
n_pregb_idx[4:0]         Yes    Yes         Yes         
n_pdest_idx[4:0]         Yes    Yes         Yes         
prega_ready              Yes    Yes         Yes         
pregb_ready              Yes    Yes         Yes         
n_prega_ready            Yes    Yes         Yes         
n_pregb_ready            Yes    Yes         Yes         
n_busy                   Yes    Yes         Yes         
n_inst_out.j.opcode[6:0] Yes    Yes         Yes         
n_inst_out.j.rd[4:0]     Yes    Yes         Yes         
n_inst_out.j.f[0]        Yes    Yes         Yes         
n_inst_out.j.f[7:1]      No     No          No          
n_inst_out.j.s           No     No          No          
n_inst_out.j.et[9:0]     No     No          No          
n_inst_out.j.of          No     No          No          
n_inst_out.u.opcode[6:0] Yes    Yes         Yes         
n_inst_out.u.rd[4:0]     Yes    Yes         Yes         
n_inst_out.u.imm[0]      Yes    Yes         Yes         
n_inst_out.u.imm[19:1]   No     No          No          
n_inst_out.b.opcode[6:0] Yes    Yes         Yes         
n_inst_out.b.f           Yes    Yes         Yes         
n_inst_out.b.et[3:0]     Yes    Yes         Yes         
n_inst_out.b.funct3[0]   Yes    Yes         Yes         
n_inst_out.b.funct3[2:1] No     No          No          
n_inst_out.b.rs1[4:0]    No     No          No          
n_inst_out.b.rs2[4:0]    No     No          No          
n_inst_out.b.s[5:0]      No     No          No          
n_inst_out.b.of          No     No          No          
n_inst_out.s.opcode[6:0] Yes    Yes         Yes         
n_inst_out.s.set[4:0]    Yes    Yes         Yes         
n_inst_out.s.funct3[0]   Yes    Yes         Yes         
n_inst_out.s.funct3[2:1] No     No          No          
n_inst_out.s.rs1[4:0]    No     No          No          
n_inst_out.s.rs2[4:0]    No     No          No          
n_inst_out.s.off[6:0]    No     No          No          
n_inst_out.i.opcode[6:0] Yes    Yes         Yes         
n_inst_out.i.rd[4:0]     Yes    Yes         Yes         
n_inst_out.i.funct3[0]   Yes    Yes         Yes         
n_inst_out.i.funct3[2:1] No     No          No          
n_inst_out.i.rs1[4:0]    No     No          No          
n_inst_out.i.imm[11:0]   No     No          No          
n_inst_out.r.opcode[6:0] Yes    Yes         Yes         
n_inst_out.r.rd[4:0]     Yes    Yes         Yes         
n_inst_out.r.funct3[0]   Yes    Yes         Yes         
n_inst_out.r.funct3[2:1] No     No          No          
n_inst_out.r.rs1[4:0]    No     No          No          
n_inst_out.r.rs2[4:0]    No     No          No          
n_inst_out.r.funct7[6:0] No     No          No          
n_inst_out.inst[12:0]    Yes    Yes         Yes         
n_inst_out.inst[31:13]   No     No          No          
n_rd_mem_out             No     No          No          
n_wr_mem_out             No     No          No          
n_alu_func_out[3:0]      Yes    Yes         Yes         
n_alu_func_out[4]        No     No          No          
cdb_prega_ready          Yes    Yes         Yes         
cdb_pregb_ready          Yes    Yes         Yes         
preg_ready               Yes    Yes         Yes         


-------------------------------------------------------------------------------
Branch Coverage for Instance : superrs_tb.DUT.rs_bank_1.genblk1[7].rs_entry0
         Line No. Total Covered Percent 
Branches          6     6       100.00  
IF       203      2     2       100.00  
IF       233      4     4       100.00  


203            if(reset) begin
               -1-  
204                prega_idx_out       <= `SD `ZERO_PREG;
                   ==>
205                pregb_idx_out       <= `SD `ZERO_PREG;  
206                pdest_idx_out       <= `SD `ZERO_PREG; 
207                prega_ready         <= `SD 1'b0;
208                pregb_ready         <= `SD 1'b0;
209                busy                <= `SD 1'b0;
210        
211                inst_out            <= `SD `NOP; 
212                alu_func_out        <= `SD ALU_ADD;
213                rd_mem_out          <= `SD 1'b0;
214                wr_mem_out          <= `SD 1'b0;
215        
216            end else begin
217                prega_idx_out       <= `SD n_prega_idx;
                   ==>

Branches:

-1- Status  
1   Covered 
0   Covered 


233            unique if(enable && !busy) begin
                      -1-  
234                n_prega_idx     = prega_idx_in;
                   ==>
235                n_pregb_idx     = pregb_idx_in;
236                n_pdest_idx     = pdest_idx_in;
237                n_prega_ready   = prega_ready_in;
238                n_pregb_ready   = pregb_ready_in;
239                n_inst_out      = inst_in;
240                n_alu_func_out  = alu_func;
241                n_rd_mem_out    = rd_mem;
242                n_wr_mem_out    = wr_mem;
243                n_busy          = 1'b1;
244            end else if(busy && !enable) begin
                        -2-  
245                n_prega_idx     = prega_idx_out;
246                n_pregb_idx     = pregb_idx_out;
247                n_pdest_idx     = pdest_idx_out;
248                n_prega_ready   = prega_ready | cdb_prega_ready;
249                n_pregb_ready   = pregb_ready | cdb_pregb_ready;
250                n_inst_out      = inst_out;
251                n_alu_func_out  = alu_func_out;
252                n_rd_mem_out    = rd_mem_out;
253                n_wr_mem_out    = wr_mem_out;
254                n_busy          = 1'b1;
255                if(select) begin
                   -3-  
256                    n_busy = 1'b0;
                       ==>
257                end else begin
258                    n_busy = 1'b1;
                       ==>
259                end
260            end else begin
261                n_prega_idx     = prega_idx_out;
                   ==>

Branches:

-1- -2- -3- Status  
1   -   -   Covered 
0   1   1   Covered 
0   1   0   Covered 
0   0   -   Covered 


===============================================================================
Module : rs_super
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.80 --     --      89.80 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_super.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME           
 89.80 --     --      89.80 --     --     superrs_tb.DUT 



-------------------------------------------------------------------------------
Toggle Coverage for Module : rs_super
                Total Covered Percent 
Totals          22    17      77.27   
Total Bits      196   176     89.80   
Total Bits 0->1 98    88      89.80   
Total Bits 1->0 98    88      89.80   

                              
Ports          21  16  76.19  
Port Bits      192 172 89.58  
Port Bits 0->1 96  86  89.58  
Port Bits 1->0 96  86  89.58  

                            
Signals          1 1 100.00 
Signal Bits      4 4 100.00 
Signal Bits 0->1 2 2 100.00 
Signal Bits 1->0 2 2 100.00 

Port Details
                        Toggle Toggle 1->0 Toggle 0->1 Direction 
clock                   Yes    Yes         Yes         INPUT     
reset                   Yes    Yes         Yes         INPUT     
prega_idx_in[1:0][4:0]  Yes    Yes         Yes         INPUT     
pregb_idx_in[1:0][4:0]  Yes    Yes         Yes         INPUT     
pdest_idx_in[1:0][4:0]  Yes    Yes         Yes         INPUT     
prega_ready_in[1:0]     Yes    Yes         Yes         INPUT     
pregb_ready_in[1:0]     Yes    Yes         Yes         INPUT     
inst_valid[1:0]         Yes    Yes         Yes         INPUT     
rd_mem[1:0]             No     No          No          INPUT     
wr_mem[1:0]             No     No          No          INPUT     
cdb_valid[1:0]          Yes    Yes         Yes         INPUT     
cdb_tag[1:0][4:0]       Yes    Yes         Yes         INPUT     
prega_idx_out[1:0][4:0] Yes    Yes         Yes         OUTPUT    
pregb_idx_out[1:0][4:0] Yes    Yes         Yes         OUTPUT    
pdest_idx_out[1:0][4:0] Yes    Yes         Yes         OUTPUT    
rd_mem_out[1:0]         No     No          No          OUTPUT    
wr_mem_out[1:0]         No     No          No          OUTPUT    
ALU_ready[1:0]          Yes    Yes         Yes         OUTPUT    
LSQ_ready[1:0]          No     No          No          OUTPUT    
MULT_ready[1:0]         Yes    Yes         Yes         OUTPUT    
rs_full[1:0]            Yes    Yes         Yes         OUTPUT    

Signal Details
               Toggle Toggle 1->0 Toggle 0->1 
rs_enable[1:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 89.80 --     --      89.80 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 82.43 100.00  80.39  49.31 --     100.00 


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME     
 89.80 --     --      89.80 --     --     rs_super 


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 78.09  98.53 --      57.65 --     --     superrs_tb 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 82.36 100.00  80.39  49.04 --     100.00 rs_bank_0 
 82.36 100.00  80.39  49.04 --     100.00 rs_bank_1 



-------------------------------------------------------------------------------
Since this is the module's only instance, the coverage report is the same as for the module.
===============================================================================
Module : pe
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_bank.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.issue_select 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.issue_select 



-------------------------------------------------------------------------------
Toggle Coverage for Module : pe
                Total Covered Percent 
Totals          2     2       100.00  
Total Bits      22    22      100.00  
Total Bits 0->1 11    11      100.00  
Total Bits 1->0 11    11      100.00  

                            
Ports          2  2  100.00 
Port Bits      22 22 100.00 
Port Bits 0->1 11 11 100.00 
Port Bits 1->0 11 11 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
gnt[7:0] Yes    Yes         Yes         INPUT     
enc[2:0] Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.issue_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.issue_select
                Total Covered Percent 
Totals          2     2       100.00  
Total Bits      22    22      100.00  
Total Bits 0->1 11    11      100.00  
Total Bits 1->0 11    11      100.00  

                            
Ports          2  2  100.00 
Port Bits      22 22 100.00 
Port Bits 0->1 11 11 100.00 
Port Bits 1->0 11 11 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
gnt[7:0] Yes    Yes         Yes         INPUT     
enc[2:0] Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.issue_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     pe   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.issue_select
                Total Covered Percent 
Totals          2     2       100.00  
Total Bits      22    22      100.00  
Total Bits 0->1 11    11      100.00  
Total Bits 1->0 11    11      100.00  

                            
Ports          2  2  100.00 
Port Bits      22 22 100.00 
Port Bits 0->1 11 11 100.00 
Port Bits 1->0 11 11 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
gnt[7:0] Yes    Yes         Yes         INPUT     
enc[2:0] Yes    Yes         Yes         OUTPUT    


===============================================================================
Module : ps
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_bank.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                     
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select      
 93.75 --     --      93.75 --     --     superrs_tb.DUT.rs_bank_0.alu_select      
 93.75 --     --      93.75 --     --     superrs_tb.DUT.rs_bank_0.mult_select     
 93.75 --     --      93.75 --     --     superrs_tb.DUT.rs_bank_1.alu_select      
 93.75 --     --      93.75 --     --     superrs_tb.DUT.rs_bank_1.mult_select     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select 



-------------------------------------------------------------------------------
Toggle Coverage for Module : ps
                Total Covered Percent 
Totals          6     6       100.00  
Total Bits      64    64      100.00  
Total Bits 0->1 32    32      100.00  
Total Bits 1->0 32    32      100.00  

                            
Ports          4  4  100.00 
Port Bits      36 36 100.00 
Port Bits 0->1 18 18 100.00 
Port Bits 1->0 18 18 100.00 

                              
Signals          2  2  100.00 
Signal Bits      28 28 100.00 
Signal Bits 0->1 14 14 100.00 
Signal Bits 1->0 14 14 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[6:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
  0.00 --     --       0.00 --     --     genblk1.bar[4].top  
  0.00 --     --       0.00 --     --     genblk1.bar[5].top  
  0.00 --     --       0.00 --     --     genblk1.bar[6].top  
  0.00 --     --       0.00 --     --     genblk1.foo[0].base 
  0.00 --     --       0.00 --     --     genblk1.foo[1].base 
  0.00 --     --       0.00 --     --     genblk1.foo[2].base 
  0.00 --     --       0.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select
                Total Covered Percent 
Totals          6     0       0.00    
Total Bits      64    0       0.00    
Total Bits 0->1 32    0       0.00    
Total Bits 1->0 32    0       0.00    

                           
Ports          4  0 0.00   
Port Bits      36 0 0.00   
Port Bits 0->1 18 0 0.00   
Port Bits 1->0 18 0 0.00   

                             
Signals          2  0 0.00   
Signal Bits      28 0 0.00   
Signal Bits 0->1 14 0 0.00   
Signal Bits 1->0 14 0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[7:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] No     No          No          
enables[6:0] No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
  0.00 --     --       0.00 --     --     genblk1.bar[4].top  
  0.00 --     --       0.00 --     --     genblk1.bar[5].top  
  0.00 --     --       0.00 --     --     genblk1.bar[6].top  
  0.00 --     --       0.00 --     --     genblk1.foo[0].base 
  0.00 --     --       0.00 --     --     genblk1.foo[1].base 
  0.00 --     --       0.00 --     --     genblk1.foo[2].base 
  0.00 --     --       0.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select
                Total Covered Percent 
Totals          6     0       0.00    
Total Bits      64    0       0.00    
Total Bits 0->1 32    0       0.00    
Total Bits 1->0 32    0       0.00    

                           
Ports          4  0 0.00   
Port Bits      36 0 0.00   
Port Bits 0->1 18 0 0.00   
Port Bits 1->0 18 0 0.00   

                             
Signals          2  0 0.00   
Signal Bits      28 0 0.00   
Signal Bits 0->1 14 0 0.00   
Signal Bits 1->0 14 0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[7:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] No     No          No          
enables[6:0] No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 --     --      93.75 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.95 --     --      95.95 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
 83.33 --     --      83.33 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select
                Total Covered Percent 
Totals          6     4       66.67   
Total Bits      64    60      93.75   
Total Bits 0->1 32    30      93.75   
Total Bits 1->0 32    30      93.75   

                            
Ports          4  3  75.00  
Port Bits      36 34 94.44  
Port Bits 0->1 18 17 94.44  
Port Bits 1->0 18 17 94.44  

                              
Signals          2  1  50.00  
Signal Bits      28 26 92.86  
Signal Bits 0->1 14 13 92.86  
Signal Bits 1->0 14 13 92.86  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[5:0] Yes    Yes         Yes         
enables[6]   No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 --     --      93.75 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.95 --     --      95.95 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
 83.33 --     --      83.33 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select
                Total Covered Percent 
Totals          6     4       66.67   
Total Bits      64    60      93.75   
Total Bits 0->1 32    30      93.75   
Total Bits 1->0 32    30      93.75   

                            
Ports          4  3  75.00  
Port Bits      36 34 94.44  
Port Bits 0->1 18 17 94.44  
Port Bits 1->0 18 17 94.44  

                              
Signals          2  1  50.00  
Signal Bits      28 26 92.86  
Signal Bits 0->1 14 13 92.86  
Signal Bits 1->0 14 13 92.86  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[5:0] Yes    Yes         Yes         
enables[6]   No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 --     --      93.75 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.95 --     --      95.95 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
 83.33 --     --      83.33 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select
                Total Covered Percent 
Totals          6     4       66.67   
Total Bits      64    60      93.75   
Total Bits 0->1 32    30      93.75   
Total Bits 1->0 32    30      93.75   

                            
Ports          4  3  75.00  
Port Bits      36 34 94.44  
Port Bits 0->1 18 17 94.44  
Port Bits 1->0 18 17 94.44  

                              
Signals          2  1  50.00  
Signal Bits      28 26 92.86  
Signal Bits 0->1 14 13 92.86  
Signal Bits 1->0 14 13 92.86  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[5:0] Yes    Yes         Yes         
enables[6]   No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 93.75 --     --      93.75 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 95.95 --     --      95.95 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
 83.33 --     --      83.33 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select
                Total Covered Percent 
Totals          6     4       66.67   
Total Bits      64    60      93.75   
Total Bits 0->1 32    30      93.75   
Total Bits 1->0 32    30      93.75   

                            
Ports          4  3  75.00  
Port Bits      36 34 94.44  
Port Bits 0->1 18 17 94.44  
Port Bits 1->0 18 17 94.44  

                              
Signals          2  1  50.00  
Signal Bits      28 26 92.86  
Signal Bits 0->1 14 13 92.86  
Signal Bits 1->0 14 13 92.86  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[5:0] Yes    Yes         Yes         
enables[6]   No     No          No          


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_0 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
100.00 --     --     100.00 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select
                Total Covered Percent 
Totals          6     6       100.00  
Total Bits      64    64      100.00  
Total Bits 0->1 32    32      100.00  
Total Bits 1->0 32    32      100.00  

                            
Ports          4  4  100.00 
Port Bits      36 36 100.00 
Port Bits 0->1 18 18 100.00 
Port Bits 1->0 18 18 100.00 

                              
Signals          2  2  100.00 
Signal Bits      28 28 100.00 
Signal Bits 0->1 14 14 100.00 
Signal Bits 1->0 14 14 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[6:0] Yes    Yes         Yes         


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps   


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME      
 57.93 --     --      57.93 --     --     rs_bank_1 


Subtrees :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                
100.00 --     --     100.00 --     --     genblk1.bar[4].top  
100.00 --     --     100.00 --     --     genblk1.bar[5].top  
100.00 --     --     100.00 --     --     genblk1.bar[6].top  
100.00 --     --     100.00 --     --     genblk1.foo[0].base 
100.00 --     --     100.00 --     --     genblk1.foo[1].base 
100.00 --     --     100.00 --     --     genblk1.foo[2].base 
100.00 --     --     100.00 --     --     genblk1.foo[3].base 



-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select
                Total Covered Percent 
Totals          6     6       100.00  
Total Bits      64    64      100.00  
Total Bits 0->1 32    32      100.00  
Total Bits 1->0 32    32      100.00  

                            
Ports          4  4  100.00 
Port Bits      36 36 100.00 
Port Bits 0->1 18 18 100.00 
Port Bits 1->0 18 18 100.00 

                              
Signals          2  2  100.00 
Signal Bits      28 28 100.00 
Signal Bits 0->1 14 14 100.00 
Signal Bits 1->0 14 14 100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[7:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[7:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    

Signal Details
             Toggle Toggle 1->0 Toggle 0->1 
req_ups[6:0] Yes    Yes         Yes         
enables[6:0] Yes    Yes         Yes         


===============================================================================
Module : ps2
===============================================================================
SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     

Source File(s) : 

/afs/umich.edu/user/r/a/rayss/Desktop/470_project/group6f20/Reservation_station/verilog/rs_bank.sv

Module self-instances :

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME                                                         
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[0].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[1].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[2].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[3].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[4].top       
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[5].top       
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[6].top       
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[0].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[1].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[2].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[3].base      
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[4].top       
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[5].top       
  0.00 --     --       0.00 --     --     superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[6].top       
 83.33 --     --      83.33 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[6].top       
 83.33 --     --      83.33 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[6].top      
 83.33 --     --      83.33 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[6].top       
 83.33 --     --      83.33 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[6].top      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[0].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[1].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[2].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[3].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[4].top       
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[5].top       
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[0].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[1].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[2].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[3].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[4].top      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[5].top      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[0].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[1].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[2].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[3].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[4].top  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[5].top  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[6].top  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[0].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[1].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[2].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[3].base      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[4].top       
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[5].top       
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[0].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[1].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[2].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[3].base     
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[4].top      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[5].top      
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[0].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[1].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[2].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[3].base 
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[4].top  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[5].top  
100.00 --     --     100.00 --     --     superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[6].top  



-------------------------------------------------------------------------------
Toggle Coverage for Module : ps2
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.lsq_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
  0.00 --     --       0.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
  0.00 --     --       0.00 --     --     lsq_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.lsq_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     0       0.00    
Total Bits      12    0       0.00    
Total Bits 0->1 6     0       0.00    
Total Bits 1->0 6     0       0.00    

                           
Ports          4  0 0.00   
Port Bits      12 0 0.00   
Port Bits 0->1 6  0 0.00   
Port Bits 1->0 6  0 0.00   

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] No     No          No          INPUT     
en       No     No          No          INPUT     
gnt[1:0] No     No          No          OUTPUT    
req_up   No     No          No          OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     3       75.00   
Total Bits      12    10      83.33   
Total Bits 0->1 6     5       83.33   
Total Bits 1->0 6     5       83.33   

                            
Ports          4  3  75.00  
Port Bits      12 10 83.33  
Port Bits 0->1 6  5  83.33  
Port Bits 1->0 6  5  83.33  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     3       75.00   
Total Bits      12    10      83.33   
Total Bits 0->1 6     5       83.33   
Total Bits 1->0 6     5       83.33   

                            
Ports          4  3  75.00  
Port Bits      12 10 83.33  
Port Bits 0->1 6  5  83.33  
Port Bits 1->0 6  5  83.33  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     3       75.00   
Total Bits      12    10      83.33   
Total Bits 0->1 6     5       83.33   
Total Bits 1->0 6     5       83.33   

                            
Ports          4  3  75.00  
Port Bits      12 10 83.33  
Port Bits 0->1 6  5  83.33  
Port Bits 1->0 6  5  83.33  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
 83.33 --     --      83.33 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     3       75.00   
Total Bits      12    10      83.33   
Total Bits 0->1 6     5       83.33   
Total Bits 1->0 6     5       83.33   

                            
Ports          4  3  75.00  
Port Bits      12 10 83.33  
Port Bits 0->1 6  5  83.33  
Port Bits 1->0 6  5  83.33  

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       No     No          No          INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.alu_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.mult_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_0.dispatch_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME       
 93.75 --     --      93.75 --     --     alu_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.alu_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME        
 93.75 --     --      93.75 --     --     mult_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.mult_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[0].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[0].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[1].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[1].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[2].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[2].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[3].base
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.foo[3].base
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[4].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[4].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[5].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[5].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


-------------------------------------------------------------------------------
===============================================================================
Module Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[6].top
===============================================================================

Instance :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Instance's subtree :

SCORE  LINE   COND   TOGGLE FSM    BRANCH 
100.00 --     --     100.00 --     --     


Module : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME 
100.00 --     --     100.00 --     --     ps2  


Parent : 

SCORE  LINE   COND   TOGGLE FSM    BRANCH NAME            
100.00 --     --     100.00 --     --     dispatch_select 


Subtrees :


no children
----------------


-------------------------------------------------------------------------------
Toggle Coverage for Instance : superrs_tb.DUT.rs_bank_1.dispatch_select.genblk1.bar[6].top
                Total Covered Percent 
Totals          4     4       100.00  
Total Bits      12    12      100.00  
Total Bits 0->1 6     6       100.00  
Total Bits 1->0 6     6       100.00  

                            
Ports          4  4  100.00 
Port Bits      12 12 100.00 
Port Bits 0->1 6  6  100.00 
Port Bits 1->0 6  6  100.00 

Port Details
         Toggle Toggle 1->0 Toggle 0->1 Direction 
req[1:0] Yes    Yes         Yes         INPUT     
en       Yes    Yes         Yes         INPUT     
gnt[1:0] Yes    Yes         Yes         OUTPUT    
req_up   Yes    Yes         Yes         OUTPUT    


